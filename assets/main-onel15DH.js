(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();class m{constructor(){}CardGenerator(e=1){const s=document.querySelector(".movies__list");for(let n=0;n<e;n++){const t=document.createElement("li");t.classList="movies__list-item";const i=document.createElement("article");i.classList="movie-card",i.setAttribute("aria-label","${title}");const o=document.createElement("img");o.classList="movie-card__image",o.src="https://cinemalightboxes.com/cdn/shop/files/The_Grinch_1296x.jpg?v=1727185330",o.alt="Omslag för filmen ${title}",o.setAttribute("aria-hidden","false");const c=document.createElement("h3");c.classList="movie-card__title",c.textContent="The Grinch";const a=document.createElement("time");a.classList="movie-card__date",a.setAttribute("aria-label","Premiär"),a.textContent="2000-12-01";const l=document.createElement("button");l.classList="movie-card__button",l.textContent="Boka biljett",l.setAttribute("aria-label","Boka biljett");const d=document.createElement("span");d.classList="movie-card__genre",d.textContent="Animation",i.appendChild(o),i.appendChild(c),i.appendChild(a),i.appendChild(d),i.appendChild(l),t.appendChild(i),s.appendChild(t)}}}class p{constructor(e){this.backend=e,this.films=[]}async add(e,s){try{s.style.display="block",(await this.backend.loadAllFilms()).forEach(t=>{const i=this.render(t);this.films.push(i),e.appendChild(i)})}catch(n){console.error("Error(trying to load film list):",n)}finally{s.style.display="none"}}render(e){const s=document.createElement("div");return s.classList.add("allmovies"),s.innerHTML=`
            <img src="${e.image}" class="allmovies__image"  alt="${e.title}">
            <h3 class="allmovies__title">${e.title} ${e.year}</h3>
            <p class="allmovies__desc">${e.desc}</p>
            <p class="allmovies__rating">Rating: ${e.rating}</p>
            <p class="allmovies__date">Datum: ${e.date}</p>
            <p class="allmovies__price">Pris: ${e.price}SEK</p>
            <p class="allmovies__seat">Platser: ${e.seatsAvailable}</p>
        `,s}}class v{constructor(e){this.apiUrl=e}async loadAllFilms(){const e=await fetch(this.apiUrl+"/movies");if(!e.ok)throw new Error(`Failed to fetch movies: ${e.statusText}`);const s=await e.json();return console.log(s),s}}class u{constructor(e){this.apiPath=e}async fetchData(){try{return(await(await fetch(this.apiPath)).json()).liveEvents}catch(e){return console.error("Error fetching data:",e),[]}}}class h{constructor(e){this.container=document.querySelector(e)}createLiveEvent({title:e,description:s,image:n}){const t=document.createElement("li");return t.classList.add("live__list-item"),t.innerHTML=`
        <div class="live__list-item-image-wrapper">
                <img src="${n}" class="live__list-item-image" alt="${e}" />
            </div>
            <div class="live__list-item-title">
                <h3>${e}</h3>
                <button class="live__list-item-btn" aria-label="Book ticket to live event">BOKA</button>
            </div>
            <div class="live__list-item-description">
                <p>${s}</p>
            </div>
            `,t}renderLiveEvents(e){if(!this.container){console.error("Container element not found");return}if(!Array.isArray(e)||e.length===0){this.container.innerHTML="<p> No live events founds.</p>";return}this.container.innerHTML="";const s=document.createDocumentFragment();e.forEach(n=>{const t=this.createLiveEvent(n);s.appendChild(t)}),this.container.appendChild(s)}}async function f(){const r="./assets/json/liveEvents.json",e=new u(r),s=new h(".live__list");try{const n=await e.fetchData();s.renderLiveEvents(n)}catch(n){console.error("Error initializing live events:",n)}}if(document.querySelector(".movies__list-all")){const r=document.createElement("div");r.classList.add("loading-message"),r.innerText=`Api is starting
Loading movies... Please wait.`,document.querySelector(".loading-message").appendChild(r),r.style.display="none";const e=new v("https://kino-bio-projekt.onrender.com");console.log("Link to API:"+e),new p(e).add(document.querySelector(".movies__list-all"),r)}else new m().CardGenerator(4);document.addEventListener("DOMContentLoaded",f);

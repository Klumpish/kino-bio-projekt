(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const t of i)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function s(i){const t={};return i.integrity&&(t.integrity=i.integrity),i.referrerPolicy&&(t.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?t.credentials="include":i.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(i){if(i.ep)return;i.ep=!0;const t=s(i);fetch(i.href,t)}})();class v{constructor(e){this.apiBackend=e}async CardGenerator(e=1){const s=document.querySelector(".movies__list");(await this.apiBackend.loadAllFilms()).sort((t,o)=>o.rating-t.rating).slice(0,e).forEach(t=>{const o=document.createElement("li");o.classList="movies__list-item";const a=document.createElement("article");a.classList="movie-card",a.setAttribute("aria-label",`${t.title}`);const l=document.createElement("img");l.classList="movie-card__image",l.src=`${t.image}`,l.alt=`Omslag för filmen ${t.title}`,l.setAttribute("aria-hidden","false");const p=document.createElement("h3");p.classList="movie-card__title",p.textContent=`${t.title}`;const c=document.createElement("time");c.classList="movie-card__date",c.setAttribute("aria-label",`Premiär ${t.date}`),c.textContent=`${t.date}`;const d=document.createElement("button");d.classList="movie-card__button",d.textContent="Boka biljett",d.setAttribute("aria-label","Boka biljett");const m=document.createElement("span");m.classList="movie-card__genre",m.textContent=`${t.genre}`,m.setAttribute("aria-label",`Genre: ${t.genre}`),a.appendChild(l),a.appendChild(p),a.appendChild(c),a.appendChild(m),a.appendChild(d),o.appendChild(a),s.appendChild(o)})}}class h{constructor(e){this.backend=e,this.films=[]}async add(e,s){try{s.style.display="block",(await this.backend.loadAllFilms()).forEach(i=>{const t=this.render(i);this.films.push(t),e.appendChild(t)})}catch(r){console.error("Error(trying to load film list):",r)}finally{s.style.display="none"}}render(e){const s=document.createElement("div");return s.classList.add("allmovies"),s.innerHTML=`
            <img src="${e.image}" class="allmovies__image"  alt="${e.title}">
            <h3 class="allmovies__title">${e.title} ${e.year}</h3>
            <p class="allmovies__desc">${e.desc}</p>
            <p class="allmovies__rating">Rating: ${e.rating}</p>
            <p class="allmovies__date">Datum: ${e.date}</p>
            <p class="allmovies__price">Pris: ${e.price}SEK</p>
            <p class="allmovies__seat">Platser: ${e.seatsAvailable}</p>
        `,s}}class u{constructor(e){this.apiUrl=e}async loadAllFilms(){const e=await fetch(this.apiUrl+"/movies");if(!e.ok)throw new Error(`Failed to fetch movies: ${e.statusText}`);const s=await e.json();return console.log(s),s}}class f{constructor(e){this.apiPath=e}async fetchData(){try{return(await(await fetch(this.apiPath)).json()).liveEvents}catch(e){return console.error("Error fetching data:",e),[]}}}class _{constructor(e){this.container=document.querySelector(e)}createLiveEvent({title:e,description:s,image:r}){const i=document.createElement("li");return i.classList.add("live__list-item"),i.innerHTML=`
        <div class="live__list-item-image-wrapper">
                <img src="${r}" class="live__list-item-image" alt="${e}" />
            </div>
            <div class="live__list-item-title">
                <h3>${e}</h3>
                <button class="live__list-item-btn" aria-label="Book ticket to live event">BOKA</button>
            </div>
            <div class="live__list-item-description">
                <p>${s}</p>
            </div>
            `,i}renderLiveEvents(e){if(!this.container){console.error("Container element not found");return}if(!Array.isArray(e)||e.length===0){this.container.innerHTML="<p> No live events founds.</p>";return}this.container.innerHTML="";const s=document.createDocumentFragment();e.forEach(r=>{const i=this.createLiveEvent(r);s.appendChild(i)}),this.container.appendChild(s)}}async function g(){const n="./assets/json/liveEvents.json",e=new f(n),s=new _(".live__list");try{const r=await e.fetchData();s.renderLiveEvents(r)}catch(r){console.error("Error initializing live events:",r)}}if(document.querySelector(".movies__list-all")){const n=document.createElement("div");n.classList.add("loading-message"),n.innerText=`Api is starting
Loading movies... Please wait.`,document.querySelector(".loading-message").appendChild(n),n.style.display="none";const e=new u("https://kino-bio-projekt.onrender.com");console.log("Link to API:"+e),new h(e).add(document.querySelector(".movies__list-all"),n)}else{const n=new u("https://kino-bio-projekt.onrender.com");new v(n).CardGenerator(4)}document.addEventListener("DOMContentLoaded",g);
